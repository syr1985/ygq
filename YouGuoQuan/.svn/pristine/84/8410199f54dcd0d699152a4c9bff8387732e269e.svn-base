//
//  FocusRedEnvelopeViewCell.m
//  YouGuoQuan
//
//  Created by YM on 2016/12/6.
//  Copyright © 2016年 NT. All rights reserved.
//

#import "FocusRedEnvelopeViewCell.h"
#import "HomeFocusModel.h"
#import <SDWebImage/UIImageView+WebCache.h>
#import "MoreMenuHelp.h"
#import "NSDate+LXExtension.h"
#import "UIImage+LXExtension.h"
#import "PhotoBrowserHelp.h"
#import "UIImage+Color.h"

@interface FocusRedEnvelopeViewCell ()
@property (weak, nonatomic) IBOutlet UIImageView *headerImageView;
@property (weak, nonatomic) IBOutlet UIImageView *crownImageView;
@property (weak, nonatomic) IBOutlet UIImageView *auditImageView;

@property (weak, nonatomic) IBOutlet UIImageView *tyrantImageView;
@property (weak, nonatomic) IBOutlet UIImageView *vipImageView;
@property (weak, nonatomic) IBOutlet UIImageView *sexImageView;
@property (weak, nonatomic) IBOutlet UIImageView *levelImageView;
@property (weak, nonatomic) IBOutlet UILabel *nickNameLabel;
@property (weak, nonatomic) IBOutlet UILabel *publishTimeLabel;

@property (weak, nonatomic) IBOutlet UILabel *publishTitleLabel;
@property (weak, nonatomic) IBOutlet UIView  *redPacketBackgroundView;

@property (weak, nonatomic) IBOutlet UIButton *favourButton;
@property (weak, nonatomic) IBOutlet UIButton *commentButton;
@property (weak, nonatomic) IBOutlet UIButton *payButton;
@property (weak, nonatomic) IBOutlet UIButton *moreButton;

@property (weak, nonatomic) IBOutlet NSLayoutConstraint *vipImageViewWidthContraint;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *vipImageViewLeadingConstraint;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *tyrantImageViewWidthConstraint;
@property (weak, nonatomic) IBOutlet NSLayoutConstraint *sexImageViewLeadingConstraint;
@end

@implementation FocusRedEnvelopeViewCell

- (void)dealloc {
    NSLog(@"%s",__func__);
    
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}

- (void)awakeFromNib {
    [super awakeFromNib];
    // Initialization code
    
    _headerImageView.layer.cornerRadius = 20;
    _headerImageView.layer.masksToBounds = YES;
    
    UITapGestureRecognizer *tapHeader = [[UITapGestureRecognizer alloc] initWithTarget:self
                                                                                action:@selector(tapHeaderImageView)];
    [_headerImageView addGestureRecognizer:tapHeader];
    
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(updateModelDataForComment:)
                                                 name:kCommentSuccessNotification
                                               object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(updateModelDataForBuyPhoto:)
                                                 name:kUserCenterBuyPhotoSuccessNotification
                                               object:nil];
}

- (void)setHomeFocusModel:(HomeFocusModel *)homeFocusModel {
    _homeFocusModel = homeFocusModel;
    
    NSString *headImageUrlStr = [NSString compressImageUrlWithUrlString:homeFocusModel.headImg
                                                                  width:_headerImageView.bounds.size.width
                                                                 height:_headerImageView.bounds.size.height];
    [_headerImageView sd_setImageWithURL:[NSURL URLWithString:headImageUrlStr]
                        placeholderImage:[UIImage imageNamed:@"my_head_default"]];
    
    _nickNameLabel.text = homeFocusModel.nickName;
    _crownImageView.hidden = (homeFocusModel.star != 6);
    _auditImageView.hidden = !(homeFocusModel.audit == 1 || homeFocusModel.audit == 3);
    _auditImageView.image = homeFocusModel.audit == 3 ? [UIImage imageNamed:@"列表头像团体认证"] : [UIImage imageNamed:@"头像加V"];
    
    _tyrantImageView.image = homeFocusModel.star == 5 ? [UIImage imageNamed:@"壕"] : nil;
    _tyrantImageViewWidthConstraint.constant = homeFocusModel.star == 5 ? 39 : 0;
    _sexImageViewLeadingConstraint.constant = homeFocusModel.star == 5 ? 4 : 0;
    
    _sexImageView.image = [UIImage imageNamed:homeFocusModel.sex];
    
    _vipImageView.image = homeFocusModel.isRecommend ? [UIImage imageNamed:@"VIP"] : nil;
    _vipImageViewWidthContraint.constant = homeFocusModel.isRecommend ? 29 : 0;
    _vipImageViewLeadingConstraint.constant = homeFocusModel.isRecommend ? 4 : 0;
    
    _levelImageView.hidden = homeFocusModel.star == 0;
    if (homeFocusModel.star != 0) {
        _levelImageView.image = [UIImage imageNamed:[NSString stringWithFormat:@"等级 %d",homeFocusModel.star]];
    }
    
    NSTimeInterval timeInterval = [homeFocusModel.createTime doubleValue];
    NSDate *createDate = [NSDate dateWithTimeIntervalSince1970:timeInterval / 1000];
    LXDateItem *item = [[NSDate date] lx_timeIntervalSinceDate:createDate];
    
    _publishTimeLabel.text = [NSString stringWithFormat:@"%@前",item.description];
    _publishTitleLabel.text = homeFocusModel.instro;
    
    _favourButton.selected = homeFocusModel.praise;
    [_favourButton setTitle:[homeFocusModel.recommendCount stringValue] forState:UIControlStateNormal];
    [_commentButton setTitle:[homeFocusModel.commentCount stringValue] forState:UIControlStateNormal];
    
    _payButton.hidden = ![LoginData sharedLoginData].ope;
    //_payButton.selected = homeFocusModel.isBuy;
    [_payButton setTitle:[homeFocusModel.buyCount stringValue] forState:UIControlStateNormal];
    
    [self downloadRedPacketImage];
}

- (void)downloadRedPacketImage {
    // 1.
    if (_redPacketBackgroundView.subviews.count) {
        for (UIView *view in _redPacketBackgroundView.subviews) {
            [view removeFromSuperview];
        }
    }
    
    // 2.
    NSUInteger margin = 6;
    CGFloat defaultW = (WIDTH - 24 - 2 * margin) / 3;
    UIImage *phImage = [UIImage imageFromContextWithColor:[UIColor colorWithWhite:0 alpha:0.1]
                                                     size:CGSizeMake(defaultW, defaultW)];
    //    NSString *imageName = @"";imageName = @"?imageMogr2/blur/40x20";
    BOOL isBlurImage =  !_homeFocusModel.isBuy &&
                        ![_homeFocusModel.userId isEqualToString:[LoginData sharedLoginData].userId] &&
                        [LoginData sharedLoginData].ope;
    if (_homeFocusModel.imageUrl && _homeFocusModel.imageUrl.length) {
        if ([_homeFocusModel.imageUrl containsString:@";"]) {
            NSArray *urlArray = [_homeFocusModel.imageUrl componentsSeparatedByString:@";"];
            NSUInteger count = urlArray.count;
            NSUInteger col = count == 4 ? 2 : (count > 2 ? 3 : count);
            NSUInteger row = count % 3 == 0 ? (count / 3) : (count / 3 + 1);
            
            CGFloat viewW = (WIDTH - 24 - (col - 1) * margin) / col;
            if (viewW > defaultW) {
                viewW = defaultW;
            }
            CGFloat viewH = viewW;
            for (NSUInteger i = 0; i < row; i++) {
                CGFloat viewY = (viewH + margin) * i;
                for (NSUInteger j = 0; j < col; j++) {
                    CGFloat viewX = (viewH + margin) * j;
                    NSUInteger index = i * col + j;
                    if (index < count) {
                        [self createImageViewWithImageX:viewX
                                                 imageY:viewY
                                                 imageW:viewW
                                                 imageH:viewH
                                               imageUrl:urlArray[index]
                                       placeHolderImage:phImage
                                                   blur:isBlurImage];
                    }
                }
            }
        } else {
            defaultW = 178;
            [self createImageViewWithImageX:0
                                     imageY:0
                                     imageW:defaultW
                                     imageH:defaultW
                                   imageUrl:_homeFocusModel.imageUrl
                           placeHolderImage:phImage
                                       blur:isBlurImage];
        }
    }
}

- (void)createImageViewWithImageX:(CGFloat)x imageY:(CGFloat)y imageW:(CGFloat)w imageH:(CGFloat)h imageUrl:(NSString *)url placeHolderImage:(UIImage *)phImage blur:(BOOL)isBlurImage {
    UIImageView *imageView = [[UIImageView alloc] init];
    imageView.frame = CGRectMake(x, y, w, h);
    imageView.userInteractionEnabled = YES;
    [_redPacketBackgroundView addSubview:imageView];
    
    NSString *imageUrlStr = [NSString cropImageUrlWithUrlString:url
                                                          width:w
                                                         height:w];
    if (isBlurImage) {
        [imageView sd_setImageWithURL:[NSURL URLWithString:imageUrlStr] placeholderImage:phImage options:SDWebImageAvoidAutoSetImage completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
            if (image) {
                dispatch_queue_t blurImageDispatchQueue = dispatch_queue_create("cn.newtouch.YouGuoQuan.gcd.BlurImage", DISPATCH_QUEUE_CONCURRENT);
                dispatch_async(blurImageDispatchQueue, ^{
                    UIImage *blurimage = [image blurImageWithRadius:image.size.width * 0.25];
                    dispatch_async(dispatch_get_main_queue(), ^{
                        imageView.image = blurimage;
                    });
                });
            }
        }];
    } else {
        [imageView sd_setImageWithURL:[NSURL URLWithString:imageUrlStr]
                     placeholderImage:phImage];
    }
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self
                                                                          action:@selector(popupPhotoBrowser:)];
    [imageView addGestureRecognizer:tap];
}

- (IBAction)moreButtonClicked {
    __weak typeof(self) weakself = self;
    if ([_homeFocusModel.userId isEqualToString:[LoginData sharedLoginData].userId]) {
        [MoreMenuHelp showMoreMenuForMineTrendsWithResult:^(NSUInteger index) {
            if (weakself.handleTrendsBlock) {
                weakself.handleTrendsBlock(index, weakself.homeFocusModel.focusId, weakself.row);
            }
        }];
    } else {
        if (_isTrendsDetail) {
            [MoreMenuHelp showMoreMenuForTrends:^(NSUInteger index) {
                if (weakself.actionSheetItemClicked) {
                    weakself.actionSheetItemClicked(index, weakself.homeFocusModel.userId, weakself.homeFocusModel.focusId);
                }
            }];
        } else {
            [MoreMenuHelp showMoreMenu:^(NSUInteger index) {
                if (weakself.actionSheetItemClicked) {
                    weakself.actionSheetItemClicked(index, weakself.homeFocusModel.userId, weakself.homeFocusModel.focusId);
                }
            }];
        }
    }
}

/**
 *  点击赞按钮
 */
- (IBAction)favourToOther:(UIButton *)sender {
    __weak typeof(self) weakself = self;
    if (sender.isSelected) {
        // 取消赞
        [NetworkTool cancelFavourWithFeedsID:_homeFocusModel.focusId userID:_homeFocusModel.userId success:^{
            sender.selected = NO;
            NSInteger priseCount = [weakself.homeFocusModel.recommendCount integerValue];
            //NSString *newPriseCount = [NSString stringWithFormat:@"%zd",priseCount - 1];
            NSNumber *newPriseCount = @(priseCount - 1);
            weakself.homeFocusModel.recommendCount = newPriseCount;
            [weakself.favourButton setTitle:[newPriseCount stringValue] forState:UIControlStateNormal];
            weakself.homeFocusModel.praise = NO;
            
            if (weakself.favourResultBlock) {
                weakself.favourResultBlock(YES);
            }
        }];
    } else {
        // 点赞
        [NetworkTool doFavourWithFeedsID:_homeFocusModel.focusId userId:_homeFocusModel.userId success:^{
            sender.selected = YES;
            NSInteger priseCount = [weakself.homeFocusModel.recommendCount integerValue];
            //NSString *newPriseCount = [NSString stringWithFormat:@"%zd",priseCount + 1];
            NSNumber *newPriseCount = @(priseCount + 1);
            weakself.homeFocusModel.recommendCount = newPriseCount;
            [weakself.favourButton setTitle:[newPriseCount stringValue] forState:UIControlStateNormal];
            weakself.homeFocusModel.praise = YES;
            
            if (weakself.favourResultBlock) {
                weakself.favourResultBlock(NO);
            }
        }];
    }
}

/**
 *  评论
 */
- (IBAction)messageToOther:(UIButton *)sender {
    if (_commentBlock) {
        _commentBlock(_homeFocusModel);
    }
}

/**
 *  购买红包照片
 */
- (IBAction)payForRedPacket:(UIButton *)sender {
    if ([_homeFocusModel.userId isEqualToString:[LoginData sharedLoginData].userId]) {
        return;
    }
    if (_buyRedPacketBlock) {
        NSInteger price = 10;
        if ([_homeFocusModel.imageUrl containsString:@";"]) {
            NSArray *urlArray = [_homeFocusModel.imageUrl componentsSeparatedByString:@";"];
            NSInteger count = urlArray.count;
            if (count < 3) {
                price = 10;
            } else if (count < 5 && count > 2) {
                price = 30;
            } else if (count < 8 && count > 4) {
                price = 60;
            } else {
                price = 80;
            }
        }
        _buyRedPacketBlock(price, _homeFocusModel.goodsId, _homeFocusModel.focusId, _homeFocusModel.headImg, _homeFocusModel.nickName);
    }
}

/**
 *  点击头像进TA人主页
 */
- (void)tapHeaderImageView {
    if (_tapHeaderView) {
        _tapHeaderView(_homeFocusModel.userId);
    }
}

/**
 *  打开图片浏览器
 */
- (void)popupPhotoBrowser:(UITapGestureRecognizer *)sender {
    UIView *tapView = sender.view;
    if (!_homeFocusModel.isBuy &&
        ![_homeFocusModel.userId isEqualToString:[LoginData sharedLoginData].userId] &&
        [LoginData sharedLoginData].ope) {
        [self payForRedPacket:_payButton];
        return;
    }
    
    if (_homeFocusModel.imageUrl && _homeFocusModel.imageUrl.length) {
        NSArray *urlArray;
        if ([_homeFocusModel.imageUrl containsString:@";"]) {
            urlArray = [_homeFocusModel.imageUrl componentsSeparatedByString:@";"];
        } else {
            urlArray = @[_homeFocusModel.imageUrl];
        }
        [PhotoBrowserHelp openPhotoBrowserWithImages:urlArray currentIndex:tapView.tag];
    }
}

#pragma mark - 更新模型数据
#pragma mark - 评论后更新
- (void)updateModelDataForComment:(NSNotification *)noti {
    NSNumber *content = noti.userInfo[@"NewCommentTimes"];
    NSString *focusId = noti.userInfo[@"CurrentFocusID"];
    if ([_homeFocusModel.focusId isEqualToString:focusId]) {
        _homeFocusModel.commentCount = content;
        [_commentButton setTitle:[content stringValue] forState:UIControlStateNormal];
    }
}

#pragma mark - 购买照片后更新
- (void)updateModelDataForBuyPhoto:(NSNotification *)noti {
    NSString *feedsId = noti.userInfo[@"PhotoFeedsID"];
    if ([_homeFocusModel.focusId isEqualToString:feedsId]) {
        NSInteger buyCount = [_homeFocusModel.buyCount integerValue];
        NSString *newBuyCount = [NSString stringWithFormat:@"%zd",buyCount + 1];
        _homeFocusModel.buyCount = @(buyCount + 1);//newBuyCount;
        _homeFocusModel.isBuy = YES;
        [_payButton setTitle:newBuyCount forState:UIControlStateNormal];
        if (!_payButton.isSelected) {
            _payButton.selected = YES;
        }
        // 显示原图
        [self downloadRedPacketImage];
    }
}

@end
