//
//  TrendsDetailViewController.m
//  YouGuoQuan
//
//  Created by YM on 2016/12/16.
//  Copyright © 2016年 NT. All rights reserved.
//

#import "TrendsDetailViewController.h"
#import "ReportViewController.h"
#import "FavorerListViewController.h"
#import "UserCenterViewController.h"
#import "LookPhotosViewController.h"

#import "FocusTrendsViewCell.h"
#import "FocusVideoViewCell.h"
#import "FocusRedEnvelopeViewCell.h"
#import "FavorerListViewCell.h"
#import "DetailCommentViewCell.h"
#import "DetailReplyCommentViewCell.h"

#import "HomeFocusModel.h"
#import "DetailCommentModel.h"

#import "ChatKeyBoard.h"
#import "FaceSourceManager.h"
#import "AlertViewTool.h"
#import "LongPressHelp.h"
#import <MJRefresh.h>
#import <Masonry.h>

@interface TrendsDetailViewController () <ChatKeyBoardDelegate, ChatKeyBoardDataSource, UITableViewDelegate>
@property (weak, nonatomic) IBOutlet UITableView *tableView;
@property (weak, nonatomic) IBOutlet UIView *popKeyboardView;
@property (nonatomic, strong) NSArray *favoursListArray;
@property (nonatomic, strong) NSMutableArray *commentListArray;
@property (nonatomic, strong) ChatKeyBoard *keyBoard;
@property (nonatomic,   copy) NSString *currentCommentID;
@property (nonatomic, strong) NSNumber *totalCommentCount;
@property (nonatomic,   copy) NSString *copiedComment;
@property (nonatomic, assign) int pageNo;
@property (nonatomic, assign) int pageSize;
@property (nonatomic, assign) BOOL loadDataFail;
@end

static NSString * const tableViewCellID_trends   = @"FocusTrendsViewCell";
static NSString * const tableViewCellID_video    = @"FocusVideoViewCell";
static NSString * const tableViewCellID_envelope = @"FocusRedEnvelopeViewCell";
static NSString * const tableViewCellID_favorer  = @"FavorerListViewCell";
static NSString * const tableViewCellID_comment  = @"DetailCommentViewCell";
static NSString * const tableViewCellID_reply    = @"DetailReplyCommentViewCell";

@implementation TrendsDetailViewController

- (void)dealloc {
    NSLog(@"%s", __func__);
}

#pragma mark -
#pragma mark - 懒加载
- (NSArray *)favoursListArray {
    if (!_favoursListArray) {
        _favoursListArray = [NSArray new];
    }
    return _favoursListArray;
}

- (NSMutableArray *)commentListArray {
    if (!_commentListArray) {
        _commentListArray = [NSMutableArray array];
    }
    return _commentListArray;
}

- (ChatKeyBoard *)keyBoard {
    if (!_keyBoard) {
        _keyBoard = [ChatKeyBoard keyBoardWithParentViewBounds:self.view.bounds];
        _keyBoard.delegate      = self;
        _keyBoard.dataSource    = self;
        _keyBoard.allowFace     = true;
        _keyBoard.allowVoice    = false;
        _keyBoard.allowMore     = false;
        _keyBoard.tabbarHidden  = YES;
        _keyBoard.placeHolder   = @"说点什么吧";
        _keyBoard.keyBoardStyle = KeyBoardStyleComment;
        
        [self.view addSubview:_keyBoard];
    }
    return _keyBoard;
}

#pragma mark -
#pragma mark - 系统方法
- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self configViewController];
    
    [self loadDetailInfoFromServer];
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    [self.navigationController setNavigationBarHidden:NO animated:NO];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
    //    self.favoursListArray = nil;
    //    self.commentListArray = nil;
}

#pragma mark -
#pragma mark - 配置控制器
- (void)configViewController {
    self.titleString = @"详情";
    
    self.pageNo = 1;
    self.pageSize = 20;
    self.totalCommentCount = _homeFocusModel.commentCount;
    
    self.popKeyboardView.layer.borderWidth = 1;
    self.popKeyboardView.layer.borderColor = [UIColor lightGrayColor].CGColor;
    self.popKeyboardView.layer.cornerRadius = 4;
    self.popKeyboardView.layer.masksToBounds = YES;
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self
                                                                          action:@selector(popupKeyBoard)];
    [self.popKeyboardView addGestureRecognizer:tap];
    
    UINib *nib_trends = [UINib nibWithNibName:tableViewCellID_trends bundle:nil];
    [self.tableView registerNib:nib_trends forCellReuseIdentifier:tableViewCellID_trends];
    
    UINib *nib_video  = [UINib nibWithNibName:tableViewCellID_video bundle:nil];
    [self.tableView registerNib:nib_video forCellReuseIdentifier:tableViewCellID_video];
    
    UINib *nib_envelope = [UINib nibWithNibName:tableViewCellID_envelope bundle:nil];
    [self.tableView registerNib:nib_envelope forCellReuseIdentifier:tableViewCellID_envelope];
    
    // 设置回调（一旦进入刷新状态，就调用target的action，也就是调用self的loadNewData方法）
    MJRefreshNormalHeader *header = [MJRefreshNormalHeader headerWithRefreshingTarget:self
                                                                     refreshingAction:@selector(loadNewData)];
    
    // 设置文字
    [header setTitle:@"下拉刷新数据" forState:MJRefreshStateIdle];
    [header setTitle:@"松开刷新" forState:MJRefreshStatePulling];
    [header setTitle:@"加载中..." forState:MJRefreshStateRefreshing];
    // 马上进入刷新状态
    [header beginRefreshing];
    // 设置刷新控件
    self.tableView.mj_header = header;
    
    MJRefreshAutoNormalFooter *footer = [MJRefreshAutoNormalFooter footerWithRefreshingTarget:self
                                                                             refreshingAction:@selector(loadMoreData)];
    // 设置文字
    [footer setTitle:@"上拉刷新数据" forState:MJRefreshStateIdle];
    [footer setTitle:@"加载更多..." forState:MJRefreshStateRefreshing];
    //[footer setTitle:@"到底了" forState:MJRefreshStateNoMoreData];
    footer.automaticallyRefresh = NO;
    footer.hidden = YES;
    // 设置footer
    self.tableView.mj_footer = footer;
    
    self.tableView.tableHeaderView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, WIDTH, CGFLOAT_MIN)];
    self.tableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, WIDTH, CGFLOAT_MIN)];
    
    //    UIBarButtonItem *rightItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"分享"]
    //                                                                  style:UIBarButtonItemStylePlain
    //                                                                 target:self
    //                                                                 action:@selector(showShareView)];
    //    self.navigationItem.rightBarButtonItem = rightItem;
}

- (void)reloadData {
    [self.tableView.mj_header beginRefreshing];
}

//#pragma mark -
//#pragma mark - 分享
//- (void)showShareView {
//    
//}

#pragma mark -
#pragma mark - 加载数据
- (void)loadDetailInfoFromServer {
    __weak typeof(self) weakself = self;
    [NetworkTool getTrendsDetailWithTreendsID:_homeFocusModel.focusId success:^(id result) {
        //self.homeFocusModel = [HomeFocusModel homeFocusModelWithDict:result[@"detailInfo"]];
        weakself.favoursListArray = result[@"feedZanList"];
        weakself.homeFocusModel.praise = [result[@"isMyZan"] boolValue];
        [weakself.tableView reloadData];
    }];
}

- (void)loadTotalCommentCountFromServer {
    __weak typeof(self) weakself = self;
    [NetworkTool getTotalCommentCountWithTrendsID:_homeFocusModel.focusId success:^(id result) {
        weakself.totalCommentCount = result;
    }];
}

- (void)loadNewData {
    _pageNo = 1;
    [self loadCommentDataFromServer];
}

- (void)loadMoreData {
    _pageNo++;
    [self loadCommentDataFromServer];
}

- (void)loadCommentDataFromServer {
    __weak typeof(self) weakself = self;
    [NetworkTool getCommentListWithPageNO:@(_pageNo) pageSize:@(_pageSize) trendsId:_homeFocusModel.focusId success:^(id result) {
        NSMutableArray *muArray = [NSMutableArray array];
        for (NSDictionary *dict in result) {
            DetailCommentModel *model = [DetailCommentModel detailCommentModelWithDict:dict];
            [muArray addObject:model];
        }
        weakself.loadDataFail = NO;
        if (weakself.pageNo == 1) {
            [weakself.tableView.mj_header endRefreshing];
            weakself.commentListArray = muArray;
            [weakself.tableView reloadData];
            
            //            weakself.tableView.mj_footer.hidden = muArray.count == 0;
            //            if (muArray.count < weakself.pageSize) {
            //                [weakself.tableView.mj_footer endRefreshingWithNoMoreData];
            //            } else {
            //                [weakself.tableView.mj_footer resetNoMoreData];
            //            }
        } else {
            [weakself.tableView.mj_footer endRefreshing];
            [weakself.commentListArray addObjectsFromArray:muArray];
            [weakself.tableView reloadData];
            
            //            if (muArray.count < weakself.pageSize) {
            //                [weakself.tableView.mj_footer endRefreshingWithNoMoreData];
            //            } else {
            //                [weakself.tableView.mj_footer endRefreshing];
            //            }
        }
    } failure:^{
        if (weakself.pageNo == 1) {
            weakself.loadDataFail = YES;
            [weakself.tableView.mj_header endRefreshing];
            [weakself.tableView reloadData];
        } else {
            [weakself.tableView.mj_footer endRefreshing];
        }
    }];
}

#pragma mark -
#pragma mark - 弹出键盘
- (void)popupKeyBoard {
    if ([LoginData sharedLoginData].star < 2) {
        [AlertViewTool showAlertViewWithTitle:nil Message:@"需要达到LV2才可以参与评论与发帖，快来做任务加速提升等级吧" sureBlock:nil];
        return;
    }
    _currentCommentID = @"0";
    [self.keyBoard beginComment];
}

#pragma mark -
#pragma mark - ChatKeyBoardDataSource
- (NSArray<ChatToolBarItem *> *)chatKeyBoardToolbarItems {
    return [FaceSourceManager loadToolBarItems];
}

- (NSArray<FaceSubjectModel *> *)chatKeyBoardFacePanelSubjectItems {
    return [FaceSourceManager loadFaceSource];
}

#pragma mark -
#pragma mark - 发送文本(评论)
- (void)chatKeyBoardSendText:(NSString *)text {
    [self.keyBoard endComment];
    // 发布评论
    __weak typeof(self) weakself = self;
    [NetworkTool doCommentWithContent:text toUser:_homeFocusModel.userId toComment:_currentCommentID toProduct:_homeFocusModel.focusId success:^{
        NSUInteger commentCount = [weakself.homeFocusModel.commentCount integerValue] ;
        //NSString *newCommentCount = [NSString stringWithFormat:@"%zd",commentCount + 1];
        NSNumber *newCommentCount = @(commentCount + 1);
        weakself.homeFocusModel.commentCount = newCommentCount;
        [[NSNotificationCenter defaultCenter] postNotificationName:kCommentSuccessNotification
                                                            object:nil
                                                          userInfo:@{@"NewCommentTimes":newCommentCount,
                                                                     @"CurrentFocusID":weakself.homeFocusModel.focusId}];
        
        [[NSNotificationCenter defaultCenter] postNotificationName:kUserCenterCommentSuccessNotification
                                                            object:nil
                                                          userInfo:@{@"NewCommentTimes":newCommentCount,
                                                                     @"CurrentFocusID":weakself.homeFocusModel.focusId}];
        
        [weakself.tableView.mj_header beginRefreshing];
        weakself.totalCommentCount = newCommentCount;
    }];
}

#pragma mark -
#pragma mark - 更多按钮菜单
- (void)moreButtonClicked:(NSUInteger)buttonIndex userId:(NSString *)userId aboutID:(NSString *)aboutId {
    if (buttonIndex == 2) {
        // 拉黑警告
        [AlertViewTool showAlertViewWithTitle:nil Message:@"拉黑对方后，对方将无法与您聊天，您也无法查看对方动态，是否继续？" sureBlock:^{
            // 拉黑操作
            [NetworkTool doOperationWithType:@"3" userId:userId operationType:@"1" success:^{
                [SVProgressHUD showSuccessWithStatus:@"已将对方拉黑"];
            }];
        }];
    } else if (buttonIndex == 1) {
        // 举报操作
        [self popToReportViewControllerWithType:ReportType_Trends aboutID:userId];
    }
}

#pragma mark -
#pragma mark - 跳转到赞者列表
- (void)popToFavorerListViewController {
    UIStoryboard *focusSB = [UIStoryboard storyboardWithName:@"Focus" bundle:nil];
    FavorerListViewController *favorerListVC = [focusSB instantiateViewControllerWithIdentifier:@"FavorerListVC"];
    favorerListVC.trendsId = _homeFocusModel.focusId;
    [self.navigationController pushViewController:favorerListVC animated:YES];
}

#pragma mark -
#pragma mark - 跳转到举报
- (void)popToReportViewControllerWithType:(NSUInteger)type aboutID:(NSString *)aboutID {
    UIStoryboard *discoverySB = [UIStoryboard storyboardWithName:@"Discovery" bundle:nil];
    ReportViewController *reportVC = [discoverySB instantiateViewControllerWithIdentifier:@"Report"];
    reportVC.aboutId = aboutID;
    reportVC.reportType = type;
    [self presentViewController:reportVC animated:YES completion:nil];
}

#pragma mark -
#pragma mark - 跳转到TA人中心
- (void)popToUserCenterViewController:(NSString *)userId {
    NSString *loginId = [LoginData sharedLoginData].userId;
    if ([userId isEqualToString:loginId]) {
        self.tabBarController.selectedIndex = 3;
    } else {
        UIStoryboard *otherSB = [UIStoryboard storyboardWithName:@"Other" bundle:nil];
        UserCenterViewController *userCenterVC = [otherSB instantiateViewControllerWithIdentifier:@"UserCenter"];
        userCenterVC.userId = userId;
        UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:userCenterVC];
        [self presentViewController:nav animated:YES completion:nil];
    }
}

#pragma mark -
#pragma mark - 跳转到购买红包页
- (void)popToBuyPacketViewController:(NSUInteger)price goodsID:(NSString *)goodsId feedsID:(NSString *)feedsId headImg:(NSString *)headImg nickName:(NSString *)nickName {
    UIStoryboard *otherSB = [UIStoryboard storyboardWithName:@"Other" bundle:nil];
    LookPhotosViewController *buyRedPacketVC = [otherSB instantiateViewControllerWithIdentifier:@"BuyRedEnvelope"];
    buyRedPacketVC.headImg  = headImg;
    buyRedPacketVC.nickName = nickName;
    buyRedPacketVC.price    = price;
    buyRedPacketVC.goodsId  = goodsId;
    buyRedPacketVC.feedsId  = feedsId;
    buyRedPacketVC.modalPresentationStyle = UIModalPresentationOverCurrentContext;
    [self presentViewController:buyRedPacketVC animated:YES completion:nil];
}

#pragma mark -
#pragma mark - 置顶动态、删除动态
- (void)handleMyTrendsWithIndex:(NSUInteger)index trendsID:(NSString *)trendsId {
    if (index == 1) {
        [NetworkTool deleteTrendsWithTrendsID:trendsId success:^{
            [SVProgressHUD showErrorWithStatus:@"删除动态成功"];
        } failure:^{
            [SVProgressHUD showErrorWithStatus:@"删除动态失败"];
        }];
    }
}

#pragma mark -
#pragma mark - 处理评论操作
- (void)handelCommentOperationWithType:(MenuType)type index:(NSUInteger)index comment:(DetailCommentModel *)model {
    switch (type) {
        case MenuType_LongPressOtherComment: {
            if (index == 1) {
                // 复制
                _copiedComment = model.commentContent;
                UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];
                pasteboard.string = model.commentContent;
            } else if (index == 2) {
                // 举报
                [self popToReportViewControllerWithType:ReportType_Comment aboutID:model.commentId];
            }
        }
            break;
        case MenuType_LongPressSelfComment: {
            if (index == 1) {
                // 删除
                [NetworkTool deleteCommentWithFeedsID:_homeFocusModel.focusId commentID:model.commentId success:^{
                    [SVProgressHUD showSuccessWithStatus:@"已删除评论"];
                }];
            }
        }
            break;
        case MenuType_LongPressSelfTrends: {
            if (index == 1) {
                // 复制
                _copiedComment = model.commentContent;
                UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];
                pasteboard.string = model.commentContent;
            } else if (index == 2) {
                // 举报
                [self popToReportViewControllerWithType:ReportType_Comment aboutID:model.commentId];
            } else if (index == 3) {
                // 删除
                [NetworkTool deleteCommentWithFeedsID:_homeFocusModel.focusId commentID:model.commentId success:^{
                    [SVProgressHUD showSuccessWithStatus:@"已删除评论"];
                }];
            }
        }
            break;
    }
}

#pragma mark -
#pragma mark - Table view data source
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 2;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if (section == 0) {
        return 2;
    } else {
        return self.commentListArray.count;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    __weak typeof(self) weakself = self;
    if (indexPath.section == 0) {
        if (indexPath.row == 0) {
            if (_homeFocusModel.feedsType == 1) {
                FocusTrendsViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tableViewCellID_trends forIndexPath:indexPath];
                cell.favourResultBlock = ^(BOOL cancel) {
                    [weakself loadDetailInfoFromServer];
                };
                cell.tapHeaderView = ^(NSString *userId) {
                    [weakself popToUserCenterViewController:userId];
                };
                cell.handleTrendsBlock = ^(NSUInteger index, NSString *focusId, NSInteger row) {
                    [weakself handleMyTrendsWithIndex:index trendsID:focusId];
                };
                cell.actionSheetItemClicked = ^(NSUInteger index, NSString *userId, NSString *focusId) {
                    [weakself moreButtonClicked:index userId:userId aboutID:focusId];
                };
                cell.isTrendsDetail = YES;
                cell.homeFocusModel = _homeFocusModel;
                return cell;
            } else if (_homeFocusModel.feedsType == 2) {
                FocusVideoViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tableViewCellID_video forIndexPath:indexPath];
                cell.favourResultBlock = ^(BOOL cancel) {
                    [weakself loadDetailInfoFromServer];
                };
                cell.tapHeaderView = ^(NSString *userId) {
                    [weakself popToUserCenterViewController:userId];
                };
                cell.handleTrendsBlock = ^(NSUInteger index, NSString *focusId, NSInteger row) {
                    [weakself handleMyTrendsWithIndex:index trendsID:focusId];
                };
                cell.actionSheetItemClicked = ^(NSUInteger index, NSString *userId, NSString *focusId) {
                    [weakself moreButtonClicked:index userId:userId aboutID:focusId];
                };
                cell.isTrendsDetail = YES;
                cell.homeFocusModel = _homeFocusModel;
                return cell;
            } else  { //if (_homeFocusModel.feedsType == 4)
                FocusRedEnvelopeViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tableViewCellID_envelope forIndexPath:indexPath];
                cell.favourResultBlock = ^(BOOL cancel) {
                    [weakself loadDetailInfoFromServer];
                };
                cell.tapHeaderView = ^(NSString *userId) {
                    [weakself popToUserCenterViewController:userId];
                };
                cell.handleTrendsBlock = ^(NSUInteger index, NSString *focusId, NSInteger row) {
                    [weakself handleMyTrendsWithIndex:index trendsID:focusId];
                };
                cell.actionSheetItemClicked = ^(NSUInteger index, NSString *userId, NSString *focusId) {
                    [weakself moreButtonClicked:index userId:userId aboutID:focusId];
                };
                cell.buyRedPacketBlock =  ^(NSUInteger price, NSString *goodsId, NSString *feedsId, NSString *headImg, NSString *nickName) {
                    [weakself popToBuyPacketViewController:price goodsID:goodsId feedsID:feedsId headImg:headImg nickName:nickName];
                };
                cell.isTrendsDetail = YES;
                cell.homeFocusModel = _homeFocusModel;
                return cell;
            }
        } else {
            FavorerListViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tableViewCellID_favorer forIndexPath:indexPath];
            cell.tapUserHeadImageBlock = ^(NSString *userId) {
                [weakself popToUserCenterViewController:userId];
            };
            cell.pushFavorerListViewControllerBlock = ^{
                [weakself popToFavorerListViewController];
            };
            
            cell.favorerArray = self.favoursListArray;
            cell.totalCount = _homeFocusModel.recommendCount;
            return cell;
        }
    } else {
        DetailCommentModel *model = self.commentListArray[indexPath.row];
        if ([model.aboutCommentId isEqualToString:@"0"]) {
            DetailCommentViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tableViewCellID_comment
                                                                          forIndexPath:indexPath];
            cell.tapCommentBlock = ^(DetailCommentModel *model) {
                weakself.currentCommentID = model.commentId;
                [weakself popupKeyBoard];
            };
            cell.longPressCommentBlock = ^(DetailCommentModel *model) {
                NSUInteger type = MenuType_LongPressOtherComment;
                if ([weakself.homeFocusModel.userId isEqualToString:[LoginData sharedLoginData].userId]) {
                    type = MenuType_LongPressSelfTrends;
                } else if ([model.fromUserId isEqualToString:[LoginData sharedLoginData].userId]) {
                    type = MenuType_LongPressSelfComment;
                }
                
                [LongPressHelp showLongPressMenuWithType:type returnBlock:^(NSUInteger index) {
                    [weakself handelCommentOperationWithType:type index:index comment:model];
                }];
            };
            cell.detailCommentModel = model;
            return cell;
        } else {
            DetailReplyCommentViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tableViewCellID_reply
                                                                               forIndexPath:indexPath];
            cell.tapCommentBlock = ^(DetailCommentModel *model) {
                weakself.currentCommentID = model.commentId;
                [weakself popupKeyBoard];
            };
            cell.longPressCommentBlock = ^(DetailCommentModel *model) {
                NSUInteger type = MenuType_LongPressOtherComment;
                if ([weakself.homeFocusModel.userId isEqualToString:[LoginData sharedLoginData].userId]) {
                    type = MenuType_LongPressSelfTrends;
                } else if ([model.fromUserId isEqualToString:[LoginData sharedLoginData].userId]) {
                    type = MenuType_LongPressSelfComment;
                }
                
                [LongPressHelp showLongPressMenuWithType:type returnBlock:^(NSUInteger index) {
                    [weakself handelCommentOperationWithType:type index:index comment:model];
                }];
            };
            cell.detailCommentModel = model;
            return cell;
        }
    }
}

#pragma mark -
#pragma mark - Table View Delegate
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.section == 0) {
        if (indexPath.row == 0) {
            return _homeFocusModel.cellHeight;
        } else {
            return self.favoursListArray.count ? 54 : 0;
        }
    } else {
        DetailCommentModel *model = self.commentListArray[indexPath.row];
        return model.cellHeight;
    }
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    UIView *headerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, tableView.frame.size.width, 41)];
    headerView.backgroundColor = BackgroundColor;
    UIImageView *leftImageView = [[UIImageView alloc] initWithFrame:CGRectMake(12, 14, 16, 16)];
    leftImageView.image = [UIImage imageNamed:@"评论标识"];
    [headerView addSubview:leftImageView];
    
    UILabel *countLabel = [[UILabel alloc] initWithFrame:CGRectMake(37, 14, 100, 16)];
    countLabel.text = [NSString stringWithFormat:@"共%@条评论",_totalCommentCount ? _totalCommentCount : @"0"];
    countLabel.textColor = FontColor;
    countLabel.font = [UIFont systemFontOfSize:12];
    [headerView addSubview:countLabel];
    
    return headerView;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section {
    CGFloat footerH = 12;
    NSString *warning = @"";
    UIColor *backgroundColor = [UIColor groupTableViewBackgroundColor];
    if (self.commentListArray.count == 0 && section != 0) {
        warning = @"还没有人给TA评论";
        footerH = 100;
        backgroundColor = [UIColor whiteColor];
    }
    
    if (self.loadDataFail) {
        warning = @"评论加载失败";
        footerH = 150;
        backgroundColor = [UIColor whiteColor];
    }
    
    UIView *footerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, tableView.frame.size.width, footerH)];
    footerView.backgroundColor = backgroundColor;
    if (section == 1) {
        UILabel *contentLabel = [[UILabel alloc] init];
        contentLabel.text = warning;
        contentLabel.textAlignment = NSTextAlignmentCenter;
        contentLabel.textColor = GaryFontColor;
        contentLabel.font = [UIFont systemFontOfSize:12];
        [footerView addSubview:contentLabel];
        
        [contentLabel mas_makeConstraints:^(MASConstraintMaker *make) {
            make.centerY.equalTo(footerView.mas_centerY);
            make.height.mas_equalTo(21);
            make.centerX.equalTo(footerView.mas_centerX);
        }];
        
        // 多此一举
        if (self.loadDataFail) {
            UIButton *reloadBtn = [UIButton buttonWithType:UIButtonTypeCustom];
            reloadBtn.backgroundColor = [UIColor groupTableViewBackgroundColor];
            reloadBtn.titleLabel.font = [UIFont systemFontOfSize:14];
            [reloadBtn setTitleColor:[UIColor lightGrayColor] forState:UIControlStateNormal];
            [reloadBtn setTitle:@"重新加载" forState:UIControlStateNormal];
            [reloadBtn addTarget:self action:@selector(reloadData) forControlEvents:UIControlEventTouchUpInside];
            [footerView addSubview:reloadBtn];
            
            [contentLabel mas_updateConstraints:^(MASConstraintMaker *make) {
                make.centerY.equalTo(footerView.mas_centerY).with.offset(-20);
            }];
            
            [reloadBtn mas_makeConstraints:^(MASConstraintMaker *make) {
                make.top.equalTo(contentLabel.mas_bottom).with.offset(8);
                make.left.equalTo(contentLabel.mas_left);
                make.right.equalTo(contentLabel.mas_right);
                make.height.mas_equalTo(30);
            }];
        }
    }
    
    return footerView;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    if (section == 0) {
        return 0;
    } else {
        return 41;
    }
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    if (section == 0) {
        return 0;
    } else {
        if (self.commentListArray.count) {
            return 0;
        } else {
            if (self.loadDataFail) {
                return 150;
            }
            return 100;
        }
    }
}

/*
 #pragma mark - Navigation
 
 // In a storyboard-based application, you will often want to do a little preparation before navigation
 - (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
 // Get the new view controller using [segue destinationViewController].
 // Pass the selected object to the new view controller.
 }
 */

@end
