//
//  FollowMessageViewController.m
//  YouGuoQuan
//
//  Created by liushuai on 16/12/9.
//  Copyright © 2016年 NT. All rights reserved.
//

#import "FollowMessageViewController.h"
#import "FollowMessageCell.h"
#import "AlertViewTool.h"
#import <MJRefresh.h>
#import "OthersFocusModel.h"

@interface FollowMessageViewController () <UITableViewDelegate>
@property (nonatomic, strong) NSMutableArray *modelArray;
@property (nonatomic, assign) int pageNo;
@property (nonatomic, assign) int pageSize;
@end

@implementation FollowMessageViewController

- (NSMutableArray *)modelArray {
    if (!_modelArray) {
        _modelArray = [NSMutableArray new];
    }
    return _modelArray;
}

- (void)dealloc {
    NSLog(@"%s",__func__);
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self configViewController];
}

- (void)configViewController {
    self.titleString = @"关注";
    
    self.pageNo = 1;
    self.pageSize = 15;
    self.tableView.rowHeight = 56;
    
    // 设置回调（一旦进入刷新状态，就调用target的action，也就是调用self的loadNewData方法）
    MJRefreshNormalHeader *header = [MJRefreshNormalHeader headerWithRefreshingTarget:self
                                                                     refreshingAction:@selector(loadNewData)];
    // 设置文字
    [header setTitle:@"下拉刷新数据" forState:MJRefreshStateIdle];
    [header setTitle:@"松开刷新" forState:MJRefreshStatePulling];
    [header setTitle:@"加载中..." forState:MJRefreshStateRefreshing];
    // 立即刷新
    [header beginRefreshing];
    // 设置刷新控件
    self.tableView.mj_header = header;
    
    MJRefreshAutoNormalFooter *footer = [MJRefreshAutoNormalFooter footerWithRefreshingTarget:self
                                                                             refreshingAction:@selector(loadMoreData)];
    // 设置文字
    [footer setTitle:@"上拉刷新数据" forState:MJRefreshStateIdle];
    [footer setTitle:@"加载更多..." forState:MJRefreshStateRefreshing];
    [footer setTitle:@"到底了" forState:MJRefreshStateNoMoreData];
    footer.automaticallyRefresh = NO;
    footer.hidden = YES;
    // 设置footer
    self.tableView.mj_footer = footer;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
    //    self.modelArray = nil;
}

- (void)loadNewData {
    _pageNo = 1;
    [self loadDataFromServer];
}

- (void)loadMoreData {
    _pageNo++;
    [self loadDataFromServer];
}

- (void)loadDataSuccess:(NSArray *)dataArray {
    NSMutableArray *muArray = [NSMutableArray array];
    for (NSDictionary *dict in dataArray) {
        OthersFocusModel *model = [OthersFocusModel othersFocusModelWithDict:dict];
        [muArray addObject:model];
    }
    
    if (_pageNo == 1) {
        self.modelArray = muArray;
        [self.tableView reloadData];
        [self.tableView.mj_header endRefreshing];
        self.tableView.mj_footer.hidden = muArray.count == 0;
        if (muArray.count < _pageSize) {
            [self.tableView.mj_footer endRefreshingWithNoMoreData];
        } else {
            [self.tableView.mj_footer resetNoMoreData];
        }
    } else {
        [self.modelArray addObjectsFromArray:muArray];
        [self.tableView reloadData];
        
        if (muArray.count < _pageSize) {
            [self.tableView.mj_footer endRefreshingWithNoMoreData];
        } else {
            [self.tableView.mj_footer endRefreshing];
        }
    }
    //_noResultView.hidden = _modelArray.count;
}

- (void)loadDataFailure {
    if (_pageNo == 1) {
        [self.tableView.mj_header endRefreshing];
    } else {
        [self.tableView.mj_footer endRefreshing];
    }
}

#pragma mark -
#pragma mark - 从服务器加载数据
- (void)loadDataFromServer {
    __weak typeof(self) weakself = self;
    //1：关注列表，2：粉丝列表，3：黑名单列表
    [NetworkTool getMyFunsFocusBlackListWithType:@(2) pageNo:@(_pageNo) pageSize:@(_pageSize) success:^(id result) {
        [weakself loadDataSuccess:result];
    } failure:^{
        [weakself loadDataFailure];
    }];
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.modelArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    FollowMessageCell *cell = [tableView dequeueReusableCellWithIdentifier:@"FollowMessageCell" forIndexPath:indexPath];
    cell.otherFocusModel = self.modelArray[indexPath.row];
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    //    UIStoryboard *homeSB = [UIStoryboard storyboardWithName:@"Home" bundle:nil];
    //    UserCenterViewController *userCenterVC = [homeSB instantiateViewControllerWithIdentifier:@"UserCenter"];
    //    SearchReaultModel *searchModel = self.searchResultArray[indexPath.row];
    //    userCenterVC.userId = searchModel.userId;
    //    UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:userCenterVC];
    //    [self presentViewController:nav animated:YES completion:nil];
}

@end
