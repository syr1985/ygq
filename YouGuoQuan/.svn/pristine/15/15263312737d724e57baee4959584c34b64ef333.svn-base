//
//  TrendsDetailViewController.m
//  YouGuoQuan
//
//  Created by YM on 2016/12/16.
//  Copyright © 2016年 NT. All rights reserved.
//

#import "TrendsDetailViewController.h"
#import "ReportViewController.h"
#import "FavorerListViewController.h"
#import "UserCenterViewController.h"

#import "FocusTrendsViewCell.h"
#import "FocusVideoViewCell.h"
#import "FocusRedEnvelopeViewCell.h"
#import "FavorerListViewCell.h"
#import "DetailCommentViewCell.h"
#import "DetailReplyCommentViewCell.h"

#import "HomeFocusModel.h"
#import "DetailCommentModel.h"

#import "ChatKeyBoard.h"
#import "FaceSourceManager.h"
#import "AlertViewTool.h"
#import "LongPressHelp.h"
#import <MJRefresh.h>

@interface TrendsDetailViewController () <ChatKeyBoardDelegate,ChatKeyBoardDataSource, UITableViewDelegate>
@property (weak, nonatomic) IBOutlet UITableView *tableView;
@property (weak, nonatomic) IBOutlet UIView *popKeyboardView;
@property (nonatomic, strong) NSArray *favoursListArray;
@property (nonatomic, strong) NSMutableArray *commentListArray;
@property (nonatomic, strong) ChatKeyBoard *keyBoard;
@property (nonatomic,   copy) NSString *currentCommentID;
@property (nonatomic,   copy) NSString *totalCommentCount;
@property (nonatomic,   copy) NSString *copiedComment;
@property (nonatomic, assign) int pageNo;
@property (nonatomic, assign) int pageSize;
@end

static NSString * const tableViewCellID_trends   = @"FocusTrendsViewCell";
static NSString * const tableViewCellID_video    = @"FocusVideoViewCell";
static NSString * const tableViewCellID_envelope = @"FocusRedEnvelopeViewCell";
static NSString * const tableViewCellID_favorer  = @"FavorerListViewCell";
static NSString * const tableViewCellID_comment  = @"DetailCommentViewCell";
static NSString * const tableViewCellID_reply    = @"DetailReplyCommentViewCell";

@implementation TrendsDetailViewController

- (void)dealloc {
    NSLog(@"%@ %s",self.class, __FUNCTION__);
}

#pragma mark -
#pragma mark - 懒加载
- (NSArray *)favoursListArray {
    if (!_favoursListArray) {
        _favoursListArray = [NSArray array];
    }
    return _favoursListArray;
}

- (NSMutableArray *)commentListArray {
    if (!_commentListArray) {
        _commentListArray = [NSMutableArray array];
    }
    return _commentListArray;
}

- (ChatKeyBoard *)keyBoard {
    if (!_keyBoard) {
        _keyBoard = [ChatKeyBoard keyBoardWithParentViewBounds:self.view.bounds];
        _keyBoard.delegate      = self;
        _keyBoard.dataSource    = self;
        _keyBoard.allowFace     = true;
        _keyBoard.allowVoice    = false;
        _keyBoard.allowMore     = false;
        _keyBoard.tabbarHidden  = YES;
        _keyBoard.placeHolder   = @"说点什么吧";
        _keyBoard.keyBoardStyle = KeyBoardStyleComment;
        
        [self.view addSubview:_keyBoard];
    }
    return _keyBoard;
}

#pragma mark -
#pragma mark - 系统方法
- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self configViewController];
    
    [self loadDetailInfoFromServer];
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    [self.navigationController setNavigationBarHidden:NO animated:NO];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark -
#pragma mark - 配置控制器
- (void)configViewController {
    self.titleString = @"详情";
    
    self.pageNo = 1;
    self.pageSize = 20;
    self.totalCommentCount = _homeFocusModel.commentCount;
    
    self.popKeyboardView.layer.borderWidth = 1;
    self.popKeyboardView.layer.borderColor = [UIColor lightGrayColor].CGColor;
    self.popKeyboardView.layer.cornerRadius = 4;
    self.popKeyboardView.layer.masksToBounds = YES;
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self
                                                                          action:@selector(popupKeyBoard)];
    [self.popKeyboardView addGestureRecognizer:tap];
    
    UINib *nib_trends = [UINib nibWithNibName:tableViewCellID_trends bundle:nil];
    [self.tableView registerNib:nib_trends forCellReuseIdentifier:tableViewCellID_trends];
    
    UINib *nib_video  = [UINib nibWithNibName:tableViewCellID_video bundle:nil];
    [self.tableView registerNib:nib_video forCellReuseIdentifier:tableViewCellID_video];
    
    UINib *nib_envelope = [UINib nibWithNibName:tableViewCellID_envelope bundle:nil];
    [self.tableView registerNib:nib_envelope forCellReuseIdentifier:tableViewCellID_envelope];
    
    UINib *nib_favorer = [UINib nibWithNibName:tableViewCellID_favorer bundle:nil];
    [self.tableView registerNib:nib_favorer forCellReuseIdentifier:tableViewCellID_favorer];
    
    UINib *nib_comment = [UINib nibWithNibName:tableViewCellID_comment bundle:nil];
    [self.tableView registerNib:nib_comment forCellReuseIdentifier:tableViewCellID_comment];
    
    UINib *nib_reply = [UINib nibWithNibName:tableViewCellID_reply bundle:nil];
    [self.tableView registerNib:nib_reply forCellReuseIdentifier:tableViewCellID_reply];
    
    // 设置回调（一旦进入刷新状态，就调用target的action，也就是调用self的loadNewData方法）
    MJRefreshNormalHeader *header = [MJRefreshNormalHeader headerWithRefreshingTarget:self
                                                                     refreshingAction:@selector(loadNewData)];
    
    // 设置文字
    [header setTitle:@"下拉刷新数据" forState:MJRefreshStateIdle];
    [header setTitle:@"松开刷新" forState:MJRefreshStatePulling];
    [header setTitle:@"加载中..." forState:MJRefreshStateRefreshing];
    // 马上进入刷新状态
    [header beginRefreshing];
    // 设置刷新控件
    self.tableView.mj_header = header;
    
    MJRefreshAutoNormalFooter *footer = [MJRefreshAutoNormalFooter footerWithRefreshingTarget:self
                                                                             refreshingAction:@selector(loadMoreData)];
    // 设置文字
    [footer setTitle:@"上拉刷新数据" forState:MJRefreshStateIdle];
    [footer setTitle:@"加载更多..." forState:MJRefreshStateRefreshing];
    [footer setTitle:@"到底了" forState:MJRefreshStateNoMoreData];
    footer.automaticallyRefresh = NO;
    footer.hidden = YES;
    // 设置footer
    self.tableView.mj_footer = footer;
    
    self.tableView.tableHeaderView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, WIDTH, CGFLOAT_MIN)];
    self.tableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, WIDTH, CGFLOAT_MIN)];
    
    UIBarButtonItem *rightItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"分享"]
                                                                  style:UIBarButtonItemStylePlain
                                                                 target:self
                                                                 action:@selector(showShareView)];
    self.navigationItem.rightBarButtonItem = rightItem;
}

#pragma mark -
#pragma mark - 分享
- (void)showShareView {
    
}

#pragma mark -
#pragma mark - 加载数据
- (void)loadDetailInfoFromServer {
    [NetworkTool getTrendsDetailWithTreendsID:_homeFocusModel.focusId success:^(id result) {
        //self.homeFocusModel = [HomeFocusModel homeFocusModelWithDict:result[@"detailInfo"]];
        self.favoursListArray = result[@"feedZanList"];
        self.homeFocusModel.praise = [result[@"isMyZan"] boolValue];
        [self.tableView reloadData];
    }];
}

- (void)loadTotalCommentCountFromServer {
    [NetworkTool getTotalCommentCountWithTrendsID:_homeFocusModel.focusId success:^(id result) {
        self.totalCommentCount = result;
    }];
}


- (void)loadNewData {
    _pageNo = 1;
    [self loadCommentDataFromServer];
}

- (void)loadMoreData {
    _pageNo++;
    [self loadCommentDataFromServer];
}

- (void)loadCommentDataFromServer {
    __weak typeof(self) weakself = self;
    [NetworkTool getCommentListWithPageNO:@(_pageNo) pageSize:@(_pageSize) trendsId:_homeFocusModel.focusId success:^(id result) {
        NSMutableArray *muArray = [NSMutableArray array];
        for (NSDictionary *dict in result) {
            DetailCommentModel *model = [DetailCommentModel detailCommentModelWithDict:dict];
            [muArray addObject:model];
        }
        
        if (weakself.pageNo == 1) {
            weakself.commentListArray = muArray;
            [weakself.tableView reloadData];
            [weakself.tableView.mj_header endRefreshing];
            weakself.tableView.mj_footer.hidden = muArray.count == 0;
            if (muArray.count < weakself.pageSize) {
                [weakself.tableView.mj_footer endRefreshingWithNoMoreData];
            } else {
                [weakself.tableView.mj_footer resetNoMoreData];
            }
        } else {
            [weakself.commentListArray addObjectsFromArray:muArray];
            [weakself.tableView reloadData];
            
            if (muArray.count < weakself.pageSize) {
                [weakself.tableView.mj_footer endRefreshingWithNoMoreData];
            } else {
                [weakself.tableView.mj_footer endRefreshing];
            }
        }
    } failure:^{
        if (weakself.pageNo == 1) {
            [weakself.tableView.mj_header endRefreshing];
        } else {
            [weakself.tableView.mj_footer endRefreshing];
        }
    }];
}

#pragma mark -
#pragma mark - 弹出键盘
- (void)popupKeyBoard {
    [self.keyBoard beginComment];
}

#pragma mark -
#pragma mark - ChatKeyBoardDataSource
- (NSArray<ChatToolBarItem *> *)chatKeyBoardToolbarItems {
    return [FaceSourceManager loadToolBarItems];
}

- (NSArray<FaceSubjectModel *> *)chatKeyBoardFacePanelSubjectItems {
    return [FaceSourceManager loadFaceSource];
}

#pragma mark -
#pragma mark - 发送文本(评论)
- (void)chatKeyBoardSendText:(NSString *)text {
    [self.keyBoard endComment];
    // 发布评论
    __weak typeof(self) weakself = self;
    [NetworkTool doCommentWithContent:text toUser:_homeFocusModel.userId toComment:_currentCommentID toProduct:_homeFocusModel.focusId success:^{
        NSUInteger commentCount = [_homeFocusModel.commentCount integerValue] ;
        NSString *newCommentCount = [NSString stringWithFormat:@"%zd",commentCount + 1];
        weakself.homeFocusModel.commentCount = newCommentCount;
        [[NSNotificationCenter defaultCenter] postNotificationName:kCommentSuccessNotification
                                                            object:nil
                                                          userInfo:@{@"NewCommentTimes":newCommentCount,
                                                                     @"CurrentFocusID":_homeFocusModel.focusId}];
        NSString * const kUserCenterCommentSuccessNotification = @"UserCenterCommentSuccess";
        [[NSNotificationCenter defaultCenter] postNotificationName:kUserCenterCommentSuccessNotification
                                                            object:nil
                                                          userInfo:@{@"NewCommentTimes":newCommentCount,
                                                                     @"CurrentFocusID":_homeFocusModel.focusId}];
        
        [weakself.tableView.mj_header beginRefreshing];
        weakself.totalCommentCount = newCommentCount;
    }];
}

#pragma mark -
#pragma mark - 更多按钮菜单
- (void)moreButtonClicked:(NSUInteger)buttonIndex userId:(NSString *)userId aboutID:(NSString *)aboutId {
    if (buttonIndex == 1) {
        // 拉黑警告
        [AlertViewTool showAlertViewWithTitle:nil Message:@"拉黑对方后，对方将无法与您聊天，您也无法查看对方动态，是否继续？" sureBlock:^{
            // 拉黑操作
            [NetworkTool doOperationWithType:@"3" userId:userId operationType:@"1" success:^{
                [SVProgressHUD showSuccessWithStatus:@"已将对方拉黑"];
            }];
        }];
    } else if (buttonIndex == 2) {
        // 举报操作
        [self popToReportViewControllerWithType:ReportType_Trends aboutID:userId];
    }
}

#pragma mark -
#pragma mark - 跳转到赞者列表
- (void)popToFavorerListViewController {
    UIStoryboard *homeSB = [UIStoryboard storyboardWithName:@"Home" bundle:nil];
    FavorerListViewController *favorerListVC = [homeSB instantiateViewControllerWithIdentifier:@"FavorerListVC"];
    favorerListVC.trendsId = _homeFocusModel.focusId;
    UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:favorerListVC];
    [self presentViewController:navController animated:YES completion:nil];
}

#pragma mark -
#pragma mark - 跳转到举报
- (void)popToReportViewControllerWithType:(NSUInteger)type aboutID:(NSString *)aboutID {
    UIStoryboard *discoverySB = [UIStoryboard storyboardWithName:@"Discovery" bundle:nil];
    ReportViewController *reportVC = [discoverySB instantiateViewControllerWithIdentifier:@"Report"];
    reportVC.aboutId = aboutID;
    reportVC.reportType = type;
    [self presentViewController:reportVC animated:YES completion:nil];
}

#pragma mark -
#pragma mark - 跳转到TA人中心
- (void)popToUserCenterViewController:(NSString *)userId {
    UIStoryboard *homeSB = [UIStoryboard storyboardWithName:@"Home" bundle:nil];
    UserCenterViewController *userCenterVC = [homeSB instantiateViewControllerWithIdentifier:@"UserCenter"];
    userCenterVC.hidesBottomBarWhenPushed = YES;
    userCenterVC.userId = userId;
    UINavigationController *navController = [[UINavigationController alloc] initWithRootViewController:userCenterVC];
    [self presentViewController:navController animated:YES completion:nil];
}

#pragma mark -
#pragma mark - 处理评论操作
- (void)handelCommentOperationWithType:(MenuType)type index:(NSUInteger)index comment:(DetailCommentModel *)model {
    switch (type) {
        case MenuType_LongPressOtherComment: {
            if (index == 1) {
                // 复制
                _copiedComment = model.commentContent;
            } else if (index == 2) {
                // 举报
                [self popToReportViewControllerWithType:ReportType_Comment aboutID:model.commentId];
            }
        }
            break;
        case MenuType_LongPressSelfComment: {
            if (index == 1) {
                // 删除
                [NetworkTool deleteCommentWithFeedsID:_homeFocusModel.focusId commentID:model.commentId success:^{
                    [SVProgressHUD showSuccessWithStatus:@"已删除评论"];
                }];
            }
        }
            break;
        case MenuType_LongPressSelfTrends: {
            if (index == 1) {
                // 复制
                _copiedComment = model.commentContent;
            } else if (index == 2) {
                // 举报
                [self popToReportViewControllerWithType:ReportType_Comment aboutID:model.commentId];
            } else if (index == 3) {
                // 删除
                [NetworkTool deleteCommentWithFeedsID:_homeFocusModel.focusId commentID:model.commentId success:^{
                    [SVProgressHUD showSuccessWithStatus:@"已删除评论"];
                }];
            }
        }
            break;
    }
}

#pragma mark -
#pragma mark - Table view data source
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 2;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if (section == 0) {
        return 2;
    } else {
        return self.commentListArray.count;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    __weak typeof(self) weakself = self;
    if (indexPath.section == 0) {
        if (indexPath.row == 0) {
            if (_homeFocusModel.feedsType == 1) {
                FocusTrendsViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tableViewCellID_trends forIndexPath:indexPath];
                cell.favourResultBlock = ^(BOOL cancel) {
                    [weakself loadDetailInfoFromServer];
                };
                cell.tapHeaderView = ^(NSString *userId) {
                    [weakself popToUserCenterViewController:userId];
                };
                //                cell.commentBlock = ^(HomeFocusModel *model) {
                //                    [weakself popupKeyBoard];
                //                };
                cell.actionSheetItemClicked = ^(NSUInteger index, NSString *userId, NSString *focusId) {
                    [weakself moreButtonClicked:index userId:userId aboutID:focusId];
                };
                cell.homeFocusModel = _homeFocusModel;
                return cell;
            } else if (_homeFocusModel.feedsType == 2) {
                FocusVideoViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tableViewCellID_video forIndexPath:indexPath];
                cell.favourResultBlock = ^(BOOL cancel) {
                    [weakself loadDetailInfoFromServer];
                };
                cell.tapHeaderView = ^(NSString *userId) {
                    [weakself popToUserCenterViewController:userId];
                };
                //                cell.commentBlock = ^(HomeFocusModel *model) {
                //                    [weakself popupKeyBoard];
                //                };
                cell.actionSheetItemClicked = ^(NSUInteger index, NSString *userId, NSString *focusId) {
                    [weakself moreButtonClicked:index userId:userId aboutID:focusId];
                };
                cell.homeFocusModel = _homeFocusModel;
                return cell;
            } else  { //if (_homeFocusModel.feedsType == 4)
                FocusRedEnvelopeViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tableViewCellID_envelope forIndexPath:indexPath];
                cell.favourResultBlock = ^(BOOL cancel) {
                    [weakself loadDetailInfoFromServer];
                };
                cell.tapHeaderView = ^(NSString *userId) {
                    [weakself popToUserCenterViewController:userId];
                };
                //                cell.commentBlock = ^(HomeFocusModel *model) {
                //                    [weakself popupKeyBoard];
                //                };
                cell.actionSheetItemClicked = ^(NSUInteger index, NSString *userId, NSString *focusId) {
                    [weakself moreButtonClicked:index userId:userId aboutID:focusId];
                };
                cell.homeFocusModel = _homeFocusModel;
                return cell;
            }
        } else {
            FavorerListViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tableViewCellID_favorer forIndexPath:indexPath];
            cell.tapUserHeadImageBlock = ^(NSString *userId) {
                [weakself popToUserCenterViewController:userId];
            };
            cell.pushFavorerListViewControllerBlock = ^{
                [weakself popToFavorerListViewController];
            };
            
            cell.favorerArray = self.favoursListArray;
            cell.totalCount = _homeFocusModel.recommendCount;
            return cell;
        }
    } else {
        DetailCommentModel *model = self.commentListArray[indexPath.row];
        if ([model.aboutCommentId isEqualToString:@"0"]) {
            DetailCommentViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tableViewCellID_comment
                                                                          forIndexPath:indexPath];
            cell.tapCommentBlock = ^(DetailCommentModel *model) {
                weakself.currentCommentID = model.commentId;
                [weakself popupKeyBoard];
            };
            cell.longPressCommentBlock = ^(DetailCommentModel *model) {
                NSUInteger type = MenuType_LongPressOtherComment;
                if ([weakself.homeFocusModel.userId isEqualToString:[LoginData sharedLoginData].userId]) {
                    type = MenuType_LongPressSelfTrends;
                } else if ([model.fromUserId isEqualToString:[LoginData sharedLoginData].userId]) {
                    type = MenuType_LongPressSelfComment;
                }
                
                [LongPressHelp showLongPressMenuWithType:type returnBlock:^(NSUInteger index) {
                    [weakself handelCommentOperationWithType:type index:index comment:model];
                }];
            };
            cell.detailCommentModel = model;
            return cell;
        } else {
            DetailReplyCommentViewCell *cell = [tableView dequeueReusableCellWithIdentifier:tableViewCellID_reply
                                                                               forIndexPath:indexPath];
            cell.tapCommentBlock = ^(DetailCommentModel *model) {
                weakself.currentCommentID = model.commentId;
                [weakself popupKeyBoard];
            };
            cell.longPressCommentBlock = ^(DetailCommentModel *model) {
                NSUInteger type = MenuType_LongPressOtherComment;
                if ([weakself.homeFocusModel.userId isEqualToString:[LoginData sharedLoginData].userId]) {
                    type = MenuType_LongPressSelfTrends;
                } else if ([model.fromUserId isEqualToString:[LoginData sharedLoginData].userId]) {
                    type = MenuType_LongPressSelfComment;
                }
                
                [LongPressHelp showLongPressMenuWithType:type returnBlock:^(NSUInteger index) {
                    [weakself handelCommentOperationWithType:type index:index comment:model];
                }];
            };
            cell.detailCommentModel = model;
            return cell;
        }
    }
}

#pragma mark -
#pragma mark - Table View Delegate
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.section == 0) {
        if (indexPath.row == 0) {
            return _homeFocusModel.cellHeight;
        } else {
            return 44;
        }
    } else {
        DetailCommentModel *model = self.commentListArray[indexPath.row];
        return model.cellHeight;
    }
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    UIView *headerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, tableView.frame.size.width, 36)];
    //headerView.backgroundColor = [UIColor lightGrayColor];
    UIImageView *leftImageView = [[UIImageView alloc] initWithFrame:CGRectMake(8, 12, 16, 16)];
    leftImageView.image = [UIImage imageNamed:@"评论标识"];
    [headerView addSubview:leftImageView];
    
    UILabel *countLabel = [[UILabel alloc] initWithFrame:CGRectMake(32, 12, 100, 16)];
    countLabel.text = [NSString stringWithFormat:@"共%@条评论",_totalCommentCount ? _totalCommentCount : @"0"];
    countLabel.textColor = [UIColor darkTextColor];
    countLabel.font = [UIFont systemFontOfSize:12];
    [headerView addSubview:countLabel];
    
    return headerView;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section {
    CGFloat footerH = 12;
    NSString *waring = @"";
    UIColor *backgroundColor = [UIColor groupTableViewBackgroundColor];
    if (self.commentListArray.count == 0 && section != 0) {
        waring = @"还没有人给TA评论";
        footerH = 100;
        backgroundColor = [UIColor whiteColor];
    }
    
    UILabel *footerView = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, tableView.frame.size.width, footerH)];
    footerView.text = waring;
    footerView.backgroundColor = backgroundColor;
    footerView.textAlignment = NSTextAlignmentCenter;
    footerView.textColor = [UIColor darkTextColor];
    footerView.font = [UIFont systemFontOfSize:12];
    
    return footerView;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    if (section == 0) {
        return 0;
    } else {
        return 40;
    }
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    if (section == 0) {
        return 0;
    } else {
        if (self.commentListArray.count) {
            return 12;
        } else {
            return 100;
        }
    }
}

/*
 #pragma mark - Navigation
 
 // In a storyboard-based application, you will often want to do a little preparation before navigation
 - (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
 // Get the new view controller using [segue destinationViewController].
 // Pass the selected object to the new view controller.
 }
 */

@end
