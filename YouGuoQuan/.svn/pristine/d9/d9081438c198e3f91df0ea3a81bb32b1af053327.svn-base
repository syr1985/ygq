//
//  CityLocation.m
//  YouGuoQuan
//
//  Created by YM on 2016/11/7.
//  Copyright © 2016年 NT. All rights reserved.
//

#import "CityLocation.h"
#import <UIKit/UIKit.h>
#import <CoreLocation/CoreLocation.h>
#import "CityHelp.h"

@interface CityLocation () <CLLocationManagerDelegate>
@property (strong, nonatomic) CLLocationManager *locationManager;
@end

@implementation CityLocation

static CityLocation *_instance;

+ (instancetype)allocWithZone:(struct _NSZone *)zone {
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        _instance = [super allocWithZone:zone];
    });
    return _instance;
}

+ (instancetype)sharedInstance {
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        _instance = [[self alloc] init];
    });
    return _instance;
}

- (id)copyWithZone:(NSZone *)zone {
    return _instance;
}

- (void)startLocation {
    if([CLLocationManager locationServicesEnabled]) {
        if (!_locationManager) {
            _locationManager = [[CLLocationManager alloc] init];
            _locationManager.delegate = self;
            [_locationManager setDesiredAccuracy:kCLLocationAccuracyNearestTenMeters];
            [_locationManager requestWhenInUseAuthorization];
        }
        // 开始时时定位
        [_locationManager startUpdatingLocation];
    } else {
        //提示用户无法进行定位操作
        //        UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"提示"
        //                                                           message:@"请确认开启定位功能"
        //                                                          delegate:nil
        //                                                 cancelButtonTitle:@"确定"
        //                                                 otherButtonTitles:nil];
        //
        //        [alertView show];
    }
}

#pragma mark - CLLocationManagerDelegate
- (void)locationManager:(CLLocationManager *)manager didFailWithError:(NSError *)error {
    //    UIAlertView *tempA = [[UIAlertView alloc]initWithTitle:@"出错"
    //                                                   message:error.localizedDescription
    //                                                  delegate:nil
    //                                         cancelButtonTitle:@"确定"
    //                                         otherButtonTitles:nil, nil];
    //    [tempA show];
}

// 6.0 以上调用这个函数
- (void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray *)locations {
    [_locationManager stopUpdatingLocation];
    
    CLLocation *currentLocation = [locations lastObject];
    //------------------位置反编码---5.0之后使用-----------------
    CLGeocoder *geocoder = [[CLGeocoder alloc] init];
    [geocoder reverseGeocodeLocation:currentLocation
                   completionHandler:^(NSArray *placemarks, NSError *error) {
                       if (_city == nil) {
                           for (CLPlacemark *place in placemarks) {
                               NSDictionary *test = [place addressDictionary];
                               _city = [test objectForKey:@"City"];
                               
                               [CityHelp updateCitiesForLocation:_city];
                           }
                       }
                   }];
}

- (void)locationManager:(CLLocationManager *)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status {
    switch (status) {
        case kCLAuthorizationStatusDenied :
        {
            //提示用户出错原因，可按住Option键点击 KCLErrorDenied的查看更多出错信息，可打印error.code值查找原因所在
            //            UIAlertView *tempA = [[UIAlertView alloc]initWithTitle:@"提醒"
            //                                                           message:@"请在设置-隐私-定位服务中开启定位功能！"
            //                                                          delegate:nil
            //                                                 cancelButtonTitle:@"确定"
            //                                                 otherButtonTitles:nil, nil];
            //            [tempA show];
        }
            break;
        case kCLAuthorizationStatusNotDetermined:
        {
            // Note: Xcode6才有的方法，所以会有警告
            if ([manager respondsToSelector:@selector(requestWhenInUseAuthorization)]) {
                [manager requestWhenInUseAuthorization];
            }
        }
            break;
        case kCLAuthorizationStatusRestricted:
        {
            // 提示用户出错原因，可按住Option键点击 KCLErrorDenied的查看更多出错信息，可打印error.code值查找原因所在
            //            UIAlertView *tempA = [[UIAlertView alloc]initWithTitle:@"提醒"
            //                                                           message:@"定位服务无法使用！"
            //                                                          delegate:nil
            //                                                 cancelButtonTitle:@"确定"
            //                                                 otherButtonTitles:nil, nil];
            //            [tempA show];
        }
        default:
            break;
    }
}

@end
