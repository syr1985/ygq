//
//  SystemMessageViewController.m
//  YouGuoQuan
//
//  Created by liushuai on 16/12/9.
//  Copyright © 2016年 NT. All rights reserved.
//

#import "SystemMessageViewController.h"
#import "UserCenterViewController.h"
#import "SystemMessageCell.h"
#import "AlertViewTool.h"
#import <MJRefresh.h>
#import "SystemMessageModel.h"

@interface SystemMessageViewController () <UITableViewDelegate>
@property (weak, nonatomic) IBOutlet UITableView *tableView;
@property (weak, nonatomic) IBOutlet UIView *noResultView;
@property (nonatomic, strong) NSMutableArray *modelArray;
@property (nonatomic, assign) int pageNo;
@property (nonatomic, assign) int pageSize;

@end

@implementation SystemMessageViewController

- (NSMutableArray *)modelArray {
    if (!_modelArray) {
        _modelArray = [NSMutableArray array];
    }
    return _modelArray;
}

- (void)dealloc {
    NSLog(@"%s",__func__);
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self configViewController];
}

- (void)configViewController {
    self.titleString = @"系统消息";
    
    self.pageNo = 1;
    self.pageSize = 10;
    
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@"清空"
                                                                              style:UIBarButtonItemStylePlain
                                                                             target:self
                                                                             action:@selector(actionClear)];
    self.navigationItem.rightBarButtonItem.tintColor = RGBA(248, 133, 0, 1);
    
    self.tableView.tableHeaderView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, WIDTH, CGFLOAT_MIN)];
    self.tableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, WIDTH, CGFLOAT_MIN)];
    
    // 设置回调（一旦进入刷新状态，就调用target的action，也就是调用self的loadNewData方法）
    MJRefreshNormalHeader *header = [MJRefreshNormalHeader headerWithRefreshingTarget:self
                                                                     refreshingAction:@selector(loadNewData)];
    // 设置文字
    [header setTitle:@"下拉刷新数据" forState:MJRefreshStateIdle];
    [header setTitle:@"松开刷新" forState:MJRefreshStatePulling];
    [header setTitle:@"加载中..." forState:MJRefreshStateRefreshing];
    // 立即刷新
    [header beginRefreshing];
    // 设置刷新控件
    self.tableView.mj_header = header;
    
    MJRefreshAutoNormalFooter *footer = [MJRefreshAutoNormalFooter footerWithRefreshingTarget:self
                                                                             refreshingAction:@selector(loadMoreData)];
    // 设置文字
    [footer setTitle:@"上拉刷新数据" forState:MJRefreshStateIdle];
    [footer setTitle:@"加载更多..." forState:MJRefreshStateRefreshing];
    [footer setTitle:@"到底了" forState:MJRefreshStateNoMoreData];
    footer.automaticallyRefresh = NO;
    footer.hidden = YES;
    // 设置footer
    self.tableView.mj_footer = footer;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)actionClear {
    if (!self.modelArray.count) {
        return;
    }
    __weak typeof(self) weakself = self;
    [AlertViewTool showAlertViewWithTitle:nil Message:@"是否要清空所有系统消息？" sureBlock:^{
        [NetworkTool clearSystemMessageSuccess:^{
            weakself.noResultView.hidden = NO;
            [weakself.modelArray removeAllObjects];
            [weakself.tableView reloadData];
            weakself.tableView.mj_footer.hidden = YES;
        } failure:^{
            [SVProgressHUD showErrorWithStatus:@"清空系统消息失败"];
        }];
    }];
}

- (void)loadNewData {
    _pageNo = 1;
    [self loadDataFromServer];
}

- (void)loadMoreData {
    _pageNo++;
    [self loadDataFromServer];
}

- (void)loadDataSuccess:(NSArray *)dataArray {
    NSMutableArray *muArray = [NSMutableArray array];
    for (NSDictionary *dict in dataArray) {
        SystemMessageModel *model = [SystemMessageModel systemMessageModelWithDict:dict];
        [muArray addObject:model];
    }
    if (self.pageNo == 1) {
        self.modelArray = muArray;
        [self.tableView reloadData];
        [self.tableView.mj_header endRefreshing];
        self.tableView.mj_footer.hidden = muArray.count == 0;
        if (muArray.count < self.pageSize) {
            [self.tableView.mj_footer endRefreshingWithNoMoreData];
        } else {
            [self.tableView.mj_footer resetNoMoreData];
        }
    } else {
        [self.modelArray addObjectsFromArray:muArray];
        [self.tableView reloadData];
        if (muArray.count < self.pageSize) {
            [self.tableView.mj_footer endRefreshingWithNoMoreData];
        } else {
            [self.tableView.mj_footer endRefreshing];
        }
    }
    
    _noResultView.hidden = _modelArray.count;
}

- (void)loadDataFailure {
    if (_pageNo == 1) {
        [self.tableView.mj_header endRefreshing];
    } else {
        [self.tableView.mj_footer endRefreshing];
    }
}

#pragma mark -
#pragma mark - 从服务器加载数据
- (void)loadDataFromServer {
    __weak typeof(self) weakself = self;
    [NetworkTool getUnreadSystemMessageWithPageNo:@(_pageNo) pageSize:@(_pageSize) Success:^(id result) {
        [weakself loadDataSuccess:result];
    } failure:^{
        [weakself loadDataFailure];
    }];
}

#pragma mark -
#pragma mark - 从服务器加载数据
- (void)popToOtherCenter:(NSString *)userId {
    UIStoryboard *otherSB = [UIStoryboard storyboardWithName:@"Other" bundle:nil];
    UserCenterViewController *userCenterVC = [otherSB instantiateViewControllerWithIdentifier:@"UserCenter"];
    userCenterVC.userId = userId;
    UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:userCenterVC];
    [self presentViewController:nav animated:YES completion:nil];
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.modelArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    __weak typeof(self) weakself = self;
    SystemMessageCell *cell = [tableView dequeueReusableCellWithIdentifier:@"SystemMessageCell" forIndexPath:indexPath];
    cell.tapUserNickNameBlock = ^(NSString *userId) {
        [weakself popToOtherCenter:userId];
    };
    cell.systemMessageModel = self.modelArray[indexPath.row];
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    SystemMessageModel *model = self.modelArray[indexPath.row];
    return model.cellHeight;
}

@end
